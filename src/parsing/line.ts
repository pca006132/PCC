import {LinkedListNode} from '../util/linked_list';
export interface LineContent {
    /**
     * @property Indent level of the line, 0 for no indent
     */
    indent: number;
    /**
     * @property Content of the line
     */
    content: string;
    /**
     * @property Line number of the line
     */
    lineNum: number;
    /**
     * @property The file name of this line
     */
    file: string;
    /**
     * @property If the line is generated by preprocessor
     */
    generated: boolean;
}

export type Line = LinkedListNode<LineContent>;

export class LineError extends Error {
    name = 'Line error';
    message: string;
    line: Line;
    inner: Error | null;
    constructor(message: string, line: Line, inner: Error|null = null) {
        super(message);
        this.message = message;
        this.line = line;
        this.inner = inner;
    }
    getInnerMessage() {
        if (this.inner) {
            return '\n' + this.inner.message;
        }
        return '';
    }
    toString() {
        return `Error: ${this.message}\nFile ${this.line.item.file}, ` +
            `Line ${this.line.item.lineNum}${this.line.item.generated?'(Generated):' + this.line.item.content:''}` +
            this.getInnerMessage();
    }
}